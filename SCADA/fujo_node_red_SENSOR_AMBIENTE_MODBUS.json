[
    {
        "id": "de4cced572669350",
        "type": "tab",
        "label": "Flow 4",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "09dc75a8fcbefa71",
        "type": "modbus-read",
        "z": "de4cced572669350",
        "name": "",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "HoldingRegister",
        "adr": "0",
        "quantity": "22",
        "rate": "1",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "c28d1a7e71c4a7c6",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 370,
        "y": 320,
        "wires": [
            [
                "9d351ca91da5671f",
                "14264780afc41fc3"
            ],
            []
        ]
    },
    {
        "id": "9d351ca91da5671f",
        "type": "debug",
        "z": "de4cced572669350",
        "name": "debug 12",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 160,
        "wires": []
    },
    {
        "id": "14264780afc41fc3",
        "type": "function",
        "z": "de4cced572669350",
        "name": "function 15",
        "func": "let data1 = msg.payload[0];\nlet data2 = msg.payload[1];\nlet data3 = msg.payload[2];\nlet data4 = msg.payload[3];\nlet data5 = msg.payload[4];\nlet data6 = msg.payload[5];\nlet data7 = msg.payload[6];\nlet data8 = msg.payload[7];\nlet data9 = msg.payload[8];\nlet data10 = msg.payload[9];\nlet data11 = msg.payload[10];\nlet data12 = msg.payload[11];\nlet data13 = msg.payload[12];\nlet data14 = msg.payload[13];\nlet data15 = msg.payload[14];\nlet data16 = msg.payload[15];\nlet data17 = msg.payload[16];\nlet data18 = msg.payload[17];\nlet data19 = msg.payload[18];\nlet data20 = msg.payload[19];\nlet data21 = msg.payload[20];\nlet data22 = msg.payload[21];\n// Create two message objects\nconst msg1 = {payload: data1 };\nconst msg2 = {payload: data2 };\nconst msg3 = { payload: data3 };\nconst msg4 = { payload: data4 };\nconst msg5 = { payload: data5 };\nconst msg6 = { payload: data6 };\nconst msg7 = { payload: data7 };\nconst msg8 = { payload: data8 };\nconst msg9 = { payload: data9 };\nconst msg10 = { payload: data10 };\nconst msg11 = { payload: data11 };\nconst msg12 = { payload: data12 };\nconst msg13 = { payload: data13 };\nconst msg14 = { payload: data14 };\nconst msg15 = { payload: data15 };\nconst msg16 = { payload: data16 };\nconst msg17 = { payload: data17 };\nconst msg18 = { payload: data18 };\nconst msg19 = { payload: data19 };\nconst msg20 = { payload: data20 };\nconst msg21 = { payload: data21 };\nconst msg22 = { payload: data22 };\nreturn [msg1,msg2,msg3,msg4,msg5,msg6,msg7,msg8,msg9,msg10,msg11,msg12,msg13,msg14,msg15,msg16,msg17,msg18,msg19,msg20,msg21,msg22];",
        "outputs": 22,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 380,
        "wires": [
            [
                "80c517c2fe0e6edc",
                "e50548194694f1d3",
                "bee91e21f3229390"
            ],
            [
                "cd9341e99175dc71",
                "e50548194694f1d3"
            ],
            [
                "2f1c53e05f2f41b1"
            ],
            [
                "f91ea27cfa3a6b56"
            ],
            [],
            [],
            [],
            [],
            [
                "fc08a8f3197a4eb8"
            ],
            [
                "45d705dfda766a95"
            ],
            [
                "252fa34093733738"
            ],
            [
                "5a586389e4f6ebc8"
            ],
            [
                "a16d2b899113641f"
            ],
            [
                "e237065553470938",
                "cbae057aa7b9ebae"
            ],
            [
                "96d91c2fe80d6cbd",
                "f884f5b65123c88f"
            ],
            [
                "7ad5156a36365946"
            ],
            [
                "4515091df984da31"
            ],
            [
                "b91e31b0369213e2"
            ],
            [
                "503cbca7f81f8a8c"
            ],
            [
                "5b0594f1429884d8"
            ],
            [],
            [
                "4f38ae1f8c6b6bea"
            ]
        ]
    },
    {
        "id": "80c517c2fe0e6edc",
        "type": "debug",
        "z": "de4cced572669350",
        "name": "debug 13",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 180,
        "wires": []
    },
    {
        "id": "cd9341e99175dc71",
        "type": "debug",
        "z": "de4cced572669350",
        "name": "debug 14",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 220,
        "wires": []
    },
    {
        "id": "4f38ae1f8c6b6bea",
        "type": "debug",
        "z": "de4cced572669350",
        "name": "debug 15",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 940,
        "wires": []
    },
    {
        "id": "e50548194694f1d3",
        "type": "ui_chart",
        "z": "de4cced572669350",
        "name": "",
        "group": "cb937515f2b7b735",
        "order": 4,
        "width": 0,
        "height": 0,
        "label": "PM2.5  y  PM10 (ug/m^3)",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "20",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ff0000",
            "#0080ff",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1010,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "2f1c53e05f2f41b1",
        "type": "function",
        "z": "de4cced572669350",
        "name": "function 16",
        "func": "msg.payload = msg.payload/10;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 340,
        "wires": [
            [
                "990ecb7dd9ec7cc2"
            ]
        ]
    },
    {
        "id": "990ecb7dd9ec7cc2",
        "type": "ui_gauge",
        "z": "de4cced572669350",
        "name": "humedad",
        "group": "cb937515f2b7b735",
        "order": 1,
        "width": 3,
        "height": 3,
        "gtype": "gage",
        "title": "Humedad",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1120,
        "y": 340,
        "wires": []
    },
    {
        "id": "c14916fc20ce5846",
        "type": "ui_gauge",
        "z": "de4cced572669350",
        "name": "Temperatura",
        "group": "cb937515f2b7b735",
        "order": 3,
        "width": 3,
        "height": 3,
        "gtype": "donut",
        "title": "Temperatura",
        "label": "Â°C",
        "format": "{{value}}",
        "min": 0,
        "max": "60",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "30",
        "seg2": "40",
        "diff": false,
        "className": "",
        "x": 1150,
        "y": 400,
        "wires": []
    },
    {
        "id": "f91ea27cfa3a6b56",
        "type": "function",
        "z": "de4cced572669350",
        "name": "function 17",
        "func": "msg.payload = msg.payload/10;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 400,
        "wires": [
            [
                "c14916fc20ce5846"
            ]
        ]
    },
    {
        "id": "5b0594f1429884d8",
        "type": "function",
        "z": "de4cced572669350",
        "name": "function 18",
        "func": "msg.payload = msg.payload/10;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 920,
        "wires": [
            [
                "7b85a32bd0d5692a"
            ]
        ]
    },
    {
        "id": "7b85a32bd0d5692a",
        "type": "ui_gauge",
        "z": "de4cced572669350",
        "name": "Ruido",
        "group": "cb937515f2b7b735",
        "order": 2,
        "width": 3,
        "height": 3,
        "gtype": "compass",
        "title": "Ruido",
        "label": "DB",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "30",
        "seg2": "40",
        "diff": false,
        "className": "",
        "x": 1150,
        "y": 920,
        "wires": []
    },
    {
        "id": "fc08a8f3197a4eb8",
        "type": "ui_chart",
        "z": "de4cced572669350",
        "name": "",
        "group": "cb937515f2b7b735",
        "order": 6,
        "width": 2,
        "height": 5,
        "label": "CO2",
        "chartType": "bar",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "20",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#c0c0c0",
            "#0080ff",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 970,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "45d705dfda766a95",
        "type": "function",
        "z": "de4cced572669350",
        "name": "function 19",
        "func": "msg.payload = msg.payload/100;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 500,
        "wires": [
            [
                "9af14ad01a5fd703"
            ]
        ]
    },
    {
        "id": "9af14ad01a5fd703",
        "type": "ui_chart",
        "z": "de4cced572669350",
        "name": "",
        "group": "cb937515f2b7b735",
        "order": 5,
        "width": 3,
        "height": 5,
        "label": "Formaldehido",
        "chartType": "bar",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "20",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#8000ff",
            "#0080ff",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1180,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "252fa34093733738",
        "type": "function",
        "z": "de4cced572669350",
        "name": "function 20",
        "func": "msg.payload = msg.payload/100;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 540,
        "wires": [
            [
                "669b6617c35b8eb6"
            ]
        ]
    },
    {
        "id": "669b6617c35b8eb6",
        "type": "ui_chart",
        "z": "de4cced572669350",
        "name": "",
        "group": "cb937515f2b7b735",
        "order": 7,
        "width": 2,
        "height": 5,
        "label": "O3",
        "chartType": "bar",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "20",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#0080ff",
            "#0080ff",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1150,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "5a586389e4f6ebc8",
        "type": "function",
        "z": "de4cced572669350",
        "name": "function 21",
        "func": "msg.payload = msg.payload/10;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 580,
        "wires": [
            [
                "fef1b96287c80eac"
            ]
        ]
    },
    {
        "id": "fef1b96287c80eac",
        "type": "ui_chart",
        "z": "de4cced572669350",
        "name": "",
        "group": "cb937515f2b7b735",
        "order": 8,
        "width": 2,
        "height": 5,
        "label": "O2",
        "chartType": "bar",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "20",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#2ca02c",
            "#0080ff",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1150,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "a16d2b899113641f",
        "type": "ui_text",
        "z": "de4cced572669350",
        "group": "cb937515f2b7b735",
        "order": 9,
        "width": 3,
        "height": 1,
        "name": "H2S(ppm)",
        "label": "Ãcido SulfhÃ­drico (PPM)",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": 16,
        "color": "#ffffff",
        "x": 970,
        "y": 620,
        "wires": []
    },
    {
        "id": "e237065553470938",
        "type": "ui_text",
        "z": "de4cced572669350",
        "group": "cb937515f2b7b735",
        "order": 15,
        "width": 9,
        "height": 1,
        "name": "CH4(%LEL)",
        "label": "Metano (%LEL)",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": 16,
        "color": "#ffffff",
        "x": 970,
        "y": 660,
        "wires": []
    },
    {
        "id": "96d91c2fe80d6cbd",
        "type": "ui_text",
        "z": "de4cced572669350",
        "group": "cb937515f2b7b735",
        "order": 11,
        "width": 3,
        "height": 1,
        "name": "CO (ppm)",
        "label": "CO (PPM)",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": 16,
        "color": "#ffffff",
        "x": 960,
        "y": 700,
        "wires": []
    },
    {
        "id": "7ad5156a36365946",
        "type": "ui_text",
        "z": "de4cced572669350",
        "group": "cb937515f2b7b735",
        "order": 12,
        "width": 3,
        "height": 1,
        "name": "NO2 (ppm)",
        "label": "NO2 (PPM)",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": 16,
        "color": "#ffffff",
        "x": 970,
        "y": 740,
        "wires": []
    },
    {
        "id": "4515091df984da31",
        "type": "ui_text",
        "z": "de4cced572669350",
        "group": "cb937515f2b7b735",
        "order": 13,
        "width": 3,
        "height": 1,
        "name": "SO2 (ppm)",
        "label": "SO2 (PPM)",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": 16,
        "color": "#ffffff",
        "x": 970,
        "y": 780,
        "wires": []
    },
    {
        "id": "b91e31b0369213e2",
        "type": "ui_text",
        "z": "de4cced572669350",
        "group": "cb937515f2b7b735",
        "order": 14,
        "width": 3,
        "height": 1,
        "name": "H2 (ppm)",
        "label": "H2 (PPM)",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": 16,
        "color": "#ffffff",
        "x": 960,
        "y": 820,
        "wires": []
    },
    {
        "id": "503cbca7f81f8a8c",
        "type": "ui_text",
        "z": "de4cced572669350",
        "group": "cb937515f2b7b735",
        "order": 10,
        "width": 3,
        "height": 1,
        "name": "NH3 (ppm)",
        "label": "NH3 (PPM)",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": 16,
        "color": "#ffffff",
        "x": 970,
        "y": 860,
        "wires": []
    },
    {
        "id": "bee91e21f3229390",
        "type": "function",
        "z": "de4cced572669350",
        "name": "function 32",
        "func": "let valor = msg.payload;\nlet max = 35;\nlet min = 0;\n\nlet estadoAlarma = flow.get(\"estadoAlarma\") || null;\n\nif ((valor > max && estadoAlarma !== \"ALTA\") || (valor < min && estadoAlarma !== \"BAJA\")) {\n    // Se activa la alarma por exceso\n    if (valor > max) {\n        flow.set(\"estadoAlarma\", \"ALTA\");\n        msg.payload = \"ð¨ Alerta: Alta concentraciÃ³n de partÃ­culas finas\";\n        return msg;\n    }\n\n\n} else if (valor >= min && valor <= max && estadoAlarma !== null) {\n    // Se resuelve la alarma si vuelve al rango\n    flow.set(\"estadoAlarma\", null);\n    msg.payload = \"â Alarma RESUELTA : conentracion de PM2.5 normal\";\n    return msg;\n}\n\nreturn null;  // No envÃ­a mensaje si no hay cambio de estado",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 180,
        "wires": [
            [
                "d8950275401f1ad3",
                "66e6d0c9bbd26ade"
            ]
        ]
    },
    {
        "id": "66e6d0c9bbd26ade",
        "type": "ui_text",
        "z": "de4cced572669350",
        "group": "003b64132fb77fce",
        "order": 23,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1410,
        "y": 220,
        "wires": []
    },
    {
        "id": "d8950275401f1ad3",
        "type": "ui_toast",
        "z": "de4cced572669350",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1420,
        "y": 180,
        "wires": []
    },
    {
        "id": "f884f5b65123c88f",
        "type": "function",
        "z": "de4cced572669350",
        "name": "function 33",
        "func": "let valor = msg.payload;\nlet max = 35;\nlet min = 0;\n\nlet estadoAlarma = flow.get(\"estadoAlarma\") || null;\n\nif ((valor > max && estadoAlarma !== \"ALTA\") || (valor < min && estadoAlarma !== \"BAJA\")) {\n    // Se activa la alarma por exceso\n    if (valor > max) {\n        flow.set(\"estadoAlarma\", \"ALTA\");\n        msg.payload = \"ð¨ Alerta: Alta concentraciÃ³n de partÃ­culas finas\";\n        return msg;\n    }\n\n\n} else if (valor >= min && valor <= max && estadoAlarma !== null) {\n    // Se resuelve la alarma si vuelve al rango\n    flow.set(\"estadoAlarma\", null);\n    msg.payload = \"â Alarma RESUELTA : conentracion de PM2.5 normal\";\n    return msg;\n}\n\nreturn null;  // No envÃ­a mensaje si no hay cambio de estado",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 660,
        "wires": [
            [
                "9e260a72d5955ca4",
                "1671400e4b6bd6d1"
            ]
        ]
    },
    {
        "id": "1671400e4b6bd6d1",
        "type": "ui_text",
        "z": "de4cced572669350",
        "group": "003b64132fb77fce",
        "order": 24,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1390,
        "y": 700,
        "wires": []
    },
    {
        "id": "9e260a72d5955ca4",
        "type": "ui_toast",
        "z": "de4cced572669350",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1400,
        "y": 660,
        "wires": []
    },
    {
        "id": "cbae057aa7b9ebae",
        "type": "function",
        "z": "de4cced572669350",
        "name": "function 34",
        "func": "let valor = msg.payload;\nlet max = 20;\nlet min = 0;\n\nlet estadoAlarma = flow.get(\"estadoAlarma\") || null;\n\nif ((valor > max && estadoAlarma !== \"ALTA\") || (valor < min && estadoAlarma !== \"BAJA\")) {\n    // Se activa la alarma por exceso\n    if (valor > max) {\n        flow.set(\"estadoAlarma\", \"ALTA\");\n        msg.payload = \"ð¨ Alerta: Alto nivel de metano\";\n        return msg;\n    }\n\n\n} else if (valor >= min && valor <= max && estadoAlarma !== null) {\n    // Se resuelve la alarma si vuelve al rango\n    flow.set(\"estadoAlarma\", null);\n    msg.payload = \"â Alarma RESUELTA : Nivel de metano normal\";\n    return msg;\n}\n\nreturn null;  // No envÃ­a mensaje si no hay cambio de estado",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 760,
        "wires": [
            [
                "3423ef6b88ca12f2",
                "72cb62bb2912b8fa"
            ]
        ]
    },
    {
        "id": "72cb62bb2912b8fa",
        "type": "ui_text",
        "z": "de4cced572669350",
        "group": "003b64132fb77fce",
        "order": 25,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1390,
        "y": 800,
        "wires": []
    },
    {
        "id": "3423ef6b88ca12f2",
        "type": "ui_toast",
        "z": "de4cced572669350",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1400,
        "y": 760,
        "wires": []
    },
    {
        "id": "98a4a540ee54a0ed",
        "type": "ui_spacer",
        "z": "de4cced572669350",
        "name": "spacer",
        "group": "e26cfc2a64245db6",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "37be0c83bbc4a54c",
        "type": "ui_spacer",
        "z": "de4cced572669350",
        "name": "spacer",
        "group": "e26cfc2a64245db6",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "82b26a028b392f04",
        "type": "ui_spacer",
        "z": "de4cced572669350",
        "name": "spacer",
        "group": "e26cfc2a64245db6",
        "order": 8,
        "width": 5,
        "height": 1
    },
    {
        "id": "9a754e661d9b7e77",
        "type": "ui_spacer",
        "z": "de4cced572669350",
        "name": "spacer",
        "group": "e26cfc2a64245db6",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "348bd1120590c8be",
        "type": "ui_spacer",
        "z": "de4cced572669350",
        "name": "spacer",
        "group": "e26cfc2a64245db6",
        "order": 14,
        "width": 9,
        "height": 1
    },
    {
        "id": "dd113889357f5c40",
        "type": "ui_spacer",
        "z": "de4cced572669350",
        "name": "spacer",
        "group": "003b64132fb77fce",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "1f3321e986b9ce96",
        "type": "ui_spacer",
        "z": "de4cced572669350",
        "name": "spacer",
        "group": "003b64132fb77fce",
        "order": 11,
        "width": 1,
        "height": 1
    },
    {
        "id": "2827602945373ae7",
        "type": "ui_spacer",
        "z": "de4cced572669350",
        "name": "spacer",
        "group": "003b64132fb77fce",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "94ab3f5e31f284b3",
        "type": "ui_spacer",
        "z": "de4cced572669350",
        "name": "spacer",
        "group": "003b64132fb77fce",
        "order": 15,
        "width": 1,
        "height": 1
    },
    {
        "id": "a57fc78ce7f426a3",
        "type": "ui_spacer",
        "z": "de4cced572669350",
        "name": "spacer",
        "group": "003b64132fb77fce",
        "order": 16,
        "width": 1,
        "height": 1
    },
    {
        "id": "53bec58653b79eb1",
        "type": "ui_spacer",
        "z": "de4cced572669350",
        "name": "spacer",
        "group": "003b64132fb77fce",
        "order": 19,
        "width": 1,
        "height": 1
    },
    {
        "id": "c28d1a7e71c4a7c6",
        "type": "modbus-client",
        "name": "",
        "clienttype": "simpleser",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "127.0.0.1",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB0",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": 1,
        "commandDelay": 1,
        "clientTimeout": 1000,
        "reconnectOnTimeout": true,
        "reconnectTimeout": 2000,
        "parallelUnitIdsAllowed": true,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "cb937515f2b7b735",
        "type": "ui_group",
        "name": "Enviroment display interface",
        "tab": "cabc3ad28eabf51f",
        "order": 2,
        "disp": true,
        "width": 9,
        "collapse": false,
        "className": ""
    },
    {
        "id": "003b64132fb77fce",
        "type": "ui_group",
        "name": "Product indicators",
        "tab": "cabc3ad28eabf51f",
        "order": 3,
        "disp": true,
        "width": 10,
        "collapse": false,
        "className": ""
    },
    {
        "id": "e26cfc2a64245db6",
        "type": "ui_group",
        "name": "Production Status",
        "tab": "cabc3ad28eabf51f",
        "order": 1,
        "disp": true,
        "width": 9,
        "collapse": false,
        "className": ""
    },
    {
        "id": "cabc3ad28eabf51f",
        "type": "ui_tab",
        "name": "www.Prueba.cn",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    }
]